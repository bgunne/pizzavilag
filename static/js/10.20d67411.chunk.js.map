{"version":3,"sources":["redux/actions/orders.js","Containers/Orders/Orders.js"],"names":["requestOrders","dispatch","a","type","REQUEST_ORDERS_PENDING","Api","getOrders","json","orders","REQUEST_ORDERS_SUCCESS","payload","changeOrder","id","statusCode","CHANGE_ORDER_PENDING","CHANGE_ORDER_SUCCESS","deleteOrder","DELETE_ORDER_PENDING","DELETE_ORDER_SUCCESS","Orders","this","props","prevProps","prevState","className","map","order","i","user","split","pizzas","style","boxSizing","backgroundColor","status","key","pizza","price","onClick","Component","connect","state","manageOrders","manageUser","isPending"],"mappings":"6MASaA,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACzBD,EAAS,CAAEE,KAAMC,MADQ,SAEAC,IAAIC,YAFJ,8BAEiBC,OAFjB,OAEtBC,EAFsB,OAGzBP,EAAS,CAAEE,KAAMM,IAAwBC,QAASF,IAHzB,2CAAH,sDAKbG,EAAW,uCAAG,WAAOV,EAAUW,EAAIC,GAArB,SAAAX,EAAA,6DACvBD,EAAS,CAAEE,KAAMW,MADM,SAEpBT,IAAIM,YAAYC,EAAIC,GAFA,OAGvBZ,EAAS,CAAEE,KAAMY,MACjBf,EAAcC,GAJS,2CAAH,0DAMXe,EAAW,uCAAG,WAAOf,EAAUW,GAAjB,SAAAV,EAAA,6DACvBD,EAAS,CAAEE,KAAMc,MADM,SAEpBZ,IAAIW,YAAYJ,GAFI,OAGvBX,EAAS,CAAEE,KAAMe,MACjBlB,EAAcC,GAJS,2CAAH,wD,gBCFlBkB,E,kLAEJC,KAAKC,MAAMrB,kB,yCAEOsB,EAAWC,GACVH,KAAKC,MAAhBb,SACOc,EAAUd,QACxBY,KAAKC,MAAMrB,kB,+BAGH,IAAD,OACAQ,EAAWY,KAAKC,MAAhBb,OACR,OACC,yBAAKgB,UAAU,iCACd,6BAASA,UAAU,aAClB,wBAAIA,UAAU,uBAAsB,kBAAC,IAAD,CACnCZ,GAAG,mBACJ,wBAAIY,UAAU,uCAEZhB,EAAOiB,KAAI,SAACC,EAAOC,GAClB,IAAIC,EAAOF,EAAME,KAAKC,MAAM,MACxBC,EAASJ,EAAMI,OAAOD,MAAM,MAChC,OACC,wBAAIL,UAAU,sCAAsCO,MAAO,CAAEC,UAAW,cAAeC,gBAAgB,GAAD,OAAKP,EAAMQ,SAAYC,IAAKT,EAAMd,IACvI,yBAAKY,UAAU,WACd,yBAAKA,UAAU,0DACd,uBAAGA,UAAU,gCAAgCI,EAAK,KAEnD,yBAAKJ,UAAU,0DACd,uBAAGA,UAAU,gCAAgCI,EAAK,MAGpD,yBAAKJ,UAAU,WACd,yBAAKA,UAAU,0DACd,uBAAGA,UAAU,gCAAgCI,EAAK,KAEnD,yBAAKJ,UAAU,0DACd,uBAAGA,UAAU,gCAAgCI,EAAK,KAEnD,yBAAKJ,UAAU,0DACd,uBAAGA,UAAU,gCAAgCI,EAAK,MAGpD,yBAAKJ,UAAU,qCAEbM,EAAOL,KAAI,SAACW,EAAOT,GAClB,OACC,uBAAGH,UAAU,mCAAmCW,IAAKR,GAAIS,OAK7D,yBAAKZ,UAAU,uCACd,uBAAGA,UAAU,oCAAmC,kBAAC,IAAD,CAC/CZ,GAAG,sBADJ,KAC6Bc,EAAMW,MADnC,QAGD,yBAAKb,UAAU,uBACd,uBAAGA,UAAU,wEACZc,QAAS,kBAAM,EAAKjB,MAAMV,YAAYe,EAAMd,GAAI,aAEhD,kBAAC,IAAD,CACCA,GAAG,oBAEL,uBAAGY,UAAU,8EACZc,QAAS,kBAAM,EAAKjB,MAAMV,YAAYe,EAAMd,GAAI,aAEhD,kBAAC,IAAD,CACCA,GAAG,iBAEL,uBAAGY,UAAU,4EACZc,QAAS,kBAAM,EAAKjB,MAAML,YAAYU,EAAMd,MAE5C,kBAAC,IAAD,CACCA,GAAG,+B,GAzEK2B,aAsFNC,uBApGS,SAAAC,GACvB,MAAO,CACNjC,OAAQiC,EAAMC,aAAalC,OAC3BoB,KAAMa,EAAME,WAAWf,KACvBgB,UAAWH,EAAMC,aAAaE,cAGL,SAAC3C,GAC3B,MAAO,CACND,cAAe,kBAAMA,EAAcC,IACnCU,YAAa,SAACC,EAAIC,GAAL,OAAoBF,EAAYV,EAAUW,EAAIC,IAC3DG,YAAa,SAACJ,GAAD,OAAQI,EAAYf,EAAUW,OAyF9B4B,CAA6CrB","file":"static/js/10.20d67411.chunk.js","sourcesContent":["import {\r\n    REQUEST_ORDERS_PENDING,\r\n    CHANGE_ORDER_PENDING,\r\n    DELETE_ORDER_PENDING,\r\n    REQUEST_ORDERS_SUCCESS,\r\n    CHANGE_ORDER_SUCCESS,\r\n    DELETE_ORDER_SUCCESS\r\n} from \"../actiontypes/orders\"\r\nimport Api from \"../../api/Api\";\r\nexport const requestOrders = async (dispatch) => {\r\n    dispatch({ type: REQUEST_ORDERS_PENDING });\r\n\tconst orders = await (await Api.getOrders()).json();\r\n    dispatch({ type: REQUEST_ORDERS_SUCCESS, payload: orders });\r\n}\r\nexport const changeOrder = async (dispatch, id, statusCode) => {\r\n    dispatch({ type: CHANGE_ORDER_PENDING });\r\n\tawait Api.changeOrder(id, statusCode);\r\n    dispatch({ type: CHANGE_ORDER_SUCCESS });\r\n    requestOrders(dispatch);\r\n}\r\nexport const deleteOrder = async (dispatch, id) => {\r\n    dispatch({ type: DELETE_ORDER_PENDING });\r\n\tawait Api.deleteOrder(id);\r\n    dispatch({ type: DELETE_ORDER_SUCCESS });\r\n    requestOrders(dispatch);\r\n}","import React, { Component } from 'react';\r\nimport { requestOrders, changeOrder, deleteOrder } from '../../redux/actions/orders.js'\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\torders: state.manageOrders.orders,\r\n\t\tuser: state.manageUser.user,\r\n\t\tisPending: state.manageOrders.isPending\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\trequestOrders: () => requestOrders(dispatch),\r\n\t\tchangeOrder: (id, statusCode) => changeOrder(dispatch, id, statusCode),\r\n\t\tdeleteOrder: (id) => deleteOrder(dispatch, id)\r\n\t}\r\n}\r\nclass Orders extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.requestOrders();\r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tconst { orders } = this.props;\r\n\t\tif (orders !== prevProps.orders) {\r\n\t\t\tthis.props.requestOrders();\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { orders } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"w-80 flex items-center center\">\r\n\t\t\t\t<article className=\"pa2 w-100\">\r\n\t\t\t\t\t<h1 className=\"f4 bold left tl mw6\"><FormattedMessage\r\n\t\t\t\t\t\tid=\"orders.orders\" /></h1>\r\n\t\t\t\t\t<ul className=\"list pl0 ml0 center ba b--black br \">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\torders.map((order, i) => {\r\n\t\t\t\t\t\t\t\tlet user = order.user.split(\"\\n\");\r\n\t\t\t\t\t\t\t\tlet pizzas = order.pizzas.split(\"\\n\");\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li className=\"ph3 pv3 bb b--black tc items-center\" style={{ boxSizing: \"content-box\", backgroundColor: `${order.status}` }} key={order.id}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ma-auto\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ma-auto flex tc items-center center bb b--light-yellow\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"w-100 center mt-auto mb-auto\">{user[0]}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ma-auto flex tc items-center center bb b--light-yellow\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"w-100 center mt-auto mb-auto\">{user[1]}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ma-auto\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ma-auto flex tc items-center center bb b--light-yellow\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"w-100 center mt-auto mb-auto\">{user[2]}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ma-auto flex tc items-center center bb b--light-yellow\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"w-100 center mt-auto mb-auto\">{user[3]}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ma-auto flex tc items-center center bb b--light-yellow\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"w-100 center mt-auto mb-auto\">{user[4]}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ma-auto h-auto bb b--light-yellow\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tpizzas.map((pizza, i) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"w-100 center mt-auto mb-auto pt2\" key={i}>{pizza}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ma-auto flex tc items-center center\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"w-100 center mt-auto mb-auto fw6\"><FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"orders.finalPrice\" />: {order.price} Ft</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"self-end pa1 h-auto\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"f6 grow no-underline br-pill ph3 pv2 dib white pointer ba bw0 bg-gold\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.changeOrder(order.id, \"#FFFF66\")}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"orders.confirm\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"f6 grow no-underline br-pill ph3 pv2 dib white pointer ba bw0 bg-dark-green\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.changeOrder(order.id, \"#9ACD32\")}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"orders.sent\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"f6 grow no-underline br-pill ph3 pv2 dib white pointer ba bw0 bg-dark-red\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.deleteOrder(order.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormattedMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"orders.delete\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\r\n"],"sourceRoot":""}